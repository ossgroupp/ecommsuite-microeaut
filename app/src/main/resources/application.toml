nats.addresses = ['nats://localhost:4222']
otel.exclusions = ['/health']
elasticsearch.httpHosts = 'http://localhost:9200,http://127.0.0.2:9200'
consul.client.registration.enabled = true
hystrix.stream.enabled = false
hazelcast.network.addresses = "['121.0.0.1:5701']"
mongodb.uri = 'mongodb://${MONGO_HOST:localhost}:${MONGO_PORT:27017}/mydb'
micronaut.security.authentication = 'session'
rabbitmq.uri = 'amqp://localhost:5672'
redis.uri = 'redis://localhost'
flyway.datasources.default.enabled = true

[datasources.default]
url = 'jdbc:mariadb://localhost:3306/db'
username = 'root'
password = ''
driver-class-name = 'org.mariadb.jdbc.Driver'
db-type = 'mariadb'

[micronaut.metrics.export.stackdriver]
enabled = true
projectId = '${STACKDRIVER_PROJECT_ID}'
step = 'PT1M'

[micronaut.metrics.export.atlas]
enabled = true
uri = 'http://localhost:7101/api/v1/publish'
step = 'PT1M'

[otel.traces]
exporter = 'jaeger,zipkin,otlp,logging'
propagator = 'tracecontext, baggage, xray'

[ribbon]
VipAddress = 'test'
ServerListRefreshInterval = 2000

[micronaut.metrics.export.appoptics]
enabled = true
apiToken = '${APPOPTICS_API_TOKEN}'
step = 'PT1M'

[vertx.mysql.client]
port = 3306
host = 'the-host'
database = 'the-db'
database.user = 'user'
database.password = 'password'
database.maxSize = 5

[micronaut.metrics.export.datadog]
enabled = true
apiKey = '${DATADOG_APIKEY}'
step = 'PT1M'

[mqtt.client]
server-uri = 'tcp://localhost:1883'
client-id = '${random.uuid}'

[micronaut.metrics.export.ganglia]
enabled = true
protocolVersion = 3.1
step = 'PT1M'

[micronaut.metrics.export.elastic]
enabled = true
step = 'PT1M'

[micronaut.metrics]
export.cloudwatch.enabled = true
enabled = true

[micronaut.metrics.export.statsd]
enabled = true
flavor = 'datadog'
host = 'localhost'
port = 8125
step = 'PT1M'

[cassandra.default]
clusterName = '"myCluster"'
contactPoint = '"localhost"'
port = 9042
maxSchemaAgreementWaitSeconds = 20
ssl = true

[micronaut.router.static-resources.swagger]
paths = 'classpath:META-INF/swagger'
mapping = '/swagger/**'

[micronaut.router.static-resources.swagger-ui]
paths = 'classpath:META-INF/swagger/views/swagger-ui'
mapping = '/swagger-ui/**'

[micronaut.metrics.export.prometheus]
enabled = true
descriptions = true
step = 'PT1M'

[micronaut.metrics.export.dynatrace]
enabled = true
apiToken = '${DYNATRACE_DEVICE_API_TOKEN}'
uri = '${DYNATRACE_DEVICE_URI}'
deviceId = '${DYNATRACE_DEVICE_ID}'
step = 'PT1M'
